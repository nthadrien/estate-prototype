---
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry , getEntries, render } from 'astro:content';

import ClientLayout from "@layouts/ClientLayout.astro";
import BlogPostHCard from "@components/cards/BlogPostHCard.astro";

export const getStaticPaths = (async () => {
    const blogPages = await getCollection("blog");
    const allRoutes:any[] = [];
    blogPages.forEach((page) => {
        const [lang, ...slug] = page.id.split('/');
        allRoutes.push( { 
            params : { lang  , slug : slug.join("/") || undefined },
            props: { page } 
        });
    });
    return allRoutes;
}) satisfies GetStaticPaths;


const { lang, slug } = Astro.params;

const {page} = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(page);

const author = await getEntry(page.data.author.collection,page.data.author.id);
const relatedPosts = await getEntries(page.data.relatedPosts);

if ( !author) throw new Error("There must be an Author for each corresponding post !!!");


const info = {
    title: page.data.title,
    description: page.data.description,
    keywords: page.data.tags,
}


console.log(relatedPosts);

---

<ClientLayout title={info.title} description={info.description} keywords={info.keywords}>
    
    <main style="max-width: 768px;" class="container-sm mx-auto">
        <img src={page.data.image?.src}  alt={page.data.image?.src} class="w-100"/>
        <p>by {author.data.name} {remarkPluginFrontmatter.minutesRead}</p>
        <section class="content-section d-flex flex-column gap-3">
            <Content />
        </section>
    </main>

    <section style="max-width: 960px;" class="container-md d-flex justify-content-between my-2 mx-auto">

        <a href={`/${lang}/blog`} class="btn btn-outline-secondary btn-sm">
            <i class="bi bi-arrow-left"></i>  Return list to Posts
        </a>

    </section>

    <section class="container-xxl d-flex flex-column gap-2 mx-auto py-3">

        <h4>Relateds Blog Posts</h4>


        <ul class="list-unstyled row row-cols-md-2 row-cols-xl-3 g-3">
        {relatedPosts[0] && relatedPosts.map( item => <li style="height: 200px;" class="col">
                <BlogPostHCard post={item} />
        </li>)}
        </ul>

    </section>
</ClientLayout> 

<style is:inline>

    .content-section {
        & h1 {
            font-size: 1.5em;
        }

        & h2 {
            font-size: 1.2em;
        }
    }

</style>