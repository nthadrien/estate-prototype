---
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry , getEntries, render } from 'astro:content';

import ClientLayout from "@layouts/ClientLayout.astro";
import BlogPostCard from "@components/cards/BlogPostCard.astro";

export const getStaticPaths = (async () => {
    const blogPages = await getCollection("blog");
    const allRoutes:any[] = [];
    blogPages.forEach((page) => {
        const [lang, ...slug] = page.id.split('/');
        allRoutes.push( { 
            params : { lang  , slug : slug.join("/") || undefined },
            props: { page } 
        });
    });
    return allRoutes;
}) satisfies GetStaticPaths;


const { lang, slug } = Astro.params;

const {page} = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await render(page);

const author = await getEntry(page.data.author.collection,page.data.author.id);
const relatedPosts = await getEntries(page.data.relatedPosts);

if ( !author) throw new Error("There must be an Author for each corresponding post !!!");


const info = {
    title: page.data.title,
    description: page.data.description,
    keywords: page.data.tags,
}
---

<ClientLayout title={info.title} description={info.description} keywords={info.keywords}>


    
    
    <main class="container-sm row mx-auto g-3">

        <section class="col-12 mx-auto mb-3">
            <h3>{page.data.title}</h3>
            <p>Written by {author.data.name} {remarkPluginFrontmatter.minutesRead}</p>
            <img style="max-height: max(380px,40vh);max-width:1096px;" src={page.data.image?.src}  alt={page.data.image?.src} class="object-fit-cover ratio ratio-16x9 rounded-3 w-100 mx-auto"/>
        </section>
        
        <section class="col-12 col-lg-8 content-section d-flex flex-column gap-2">
            <!-- <p>Written by {author.data.name} <br/> {remarkPluginFrontmatter.minutesRead}</p> -->
            <Content />

            <p>
                <a id="back" href="#" class="btn btn-sm rounded-0 btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Return
                </a>
            </p>
        </section>

        <aside class="col-12 col-lg-4">
            <nav style="top:3rem;" class="p-2 sticky-lg-top">
                <h5 class="border-bottom pb-3">Table of Content</h5>
                {headings.map( head => <p class="mb-3 ps-2">
                    <a class="d-block" href={"#"+head.slug}>
                        {head.text}
                    </a>
                </p>)}
            </nav>
        </aside>
    </main>

    <section class="container-sm mx-auto py-3">

        <h5 class="pb-3 border-bottom">Relateds Blog Posts</h5> 

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3  g-3">
            {relatedPosts[0] && relatedPosts.map( item => <div style=";" class="col">
                <BlogPostCard display={1} post={item} />
            </div>)}
        </div>

    </section>

</ClientLayout> 